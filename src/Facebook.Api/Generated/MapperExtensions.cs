 
// --------------------------------
// <copyright file="MapperExtensions.tt" company="Thuzi, LLC">
//     Copyright (c) 2010 Thuzi, LLC (thuzi.com)
// </copyright>
// <author>Nathan Totten (ntotten.com) and Jim Zimmerman (jimzimmerman.com)</author>
// <license>Released under the terms of the Microsoft Public License (Ms-PL)</license>
// <website>http://facebooksdk.codeplex.com</website>
// <autogenerated>
//   This file was generated using MapperExtensions.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
// ---------------------------------

using System;
using System.Collections.Generic;
using Facebook.Api;
using AutoMapper;

namespace Facebook.Models.Fql {

	
	public partial class FacebookAlbum {
	 		
			public Facebook.Schema.Fql.FacebookAlbum ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookAlbum, Facebook.Schema.Fql.FacebookAlbum>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookAlbum, Facebook.Schema.Fql.FacebookAlbum>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookAlbum, Facebook.Schema.Fql.FacebookAlbum>(this);
			}
			
			public static Facebook.Models.Fql.FacebookAlbum FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookAlbum, Facebook.Models.Fql.FacebookAlbum>(value);
            }
			
	 }
	
	
	public partial class FacebookApplication {
	 		
			public Facebook.Schema.Fql.FacebookApplication ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookApplication, Facebook.Schema.Fql.FacebookApplication>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookApplication, Facebook.Schema.Fql.FacebookApplication>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookApplication, Facebook.Schema.Fql.FacebookApplication>(this);
			}
			
			public static Facebook.Models.Fql.FacebookApplication FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookApplication, Facebook.Models.Fql.FacebookApplication>(value);
            }
			
	 }
	
	
	public partial class FacebookComment {
	 		
			public Facebook.Schema.Fql.FacebookComment ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookComment, Facebook.Schema.Fql.FacebookComment>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookComment, Facebook.Schema.Fql.FacebookComment>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookComment, Facebook.Schema.Fql.FacebookComment>(this);
			}
			
			public static Facebook.Models.Fql.FacebookComment FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookComment, Facebook.Models.Fql.FacebookComment>(value);
            }
			
	 }
	
	
	public partial class FacebookConnection {
	 		
			public Facebook.Schema.Fql.FacebookConnection ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookConnection, Facebook.Schema.Fql.FacebookConnection>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookConnection, Facebook.Schema.Fql.FacebookConnection>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookConnection, Facebook.Schema.Fql.FacebookConnection>(this);
			}
			
			public static Facebook.Models.Fql.FacebookConnection FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookConnection, Facebook.Models.Fql.FacebookConnection>(value);
            }
			
	 }
	
	
	public partial class FacebookCookie {
	 		
			public Facebook.Schema.Fql.FacebookCookie ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookCookie, Facebook.Schema.Fql.FacebookCookie>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookCookie, Facebook.Schema.Fql.FacebookCookie>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookCookie, Facebook.Schema.Fql.FacebookCookie>(this);
			}
			
			public static Facebook.Models.Fql.FacebookCookie FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookCookie, Facebook.Models.Fql.FacebookCookie>(value);
            }
			
	 }
	
	
	public partial class FacebookDeveloper {
	 		
			public Facebook.Schema.Fql.FacebookDeveloper ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookDeveloper, Facebook.Schema.Fql.FacebookDeveloper>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookDeveloper, Facebook.Schema.Fql.FacebookDeveloper>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookDeveloper, Facebook.Schema.Fql.FacebookDeveloper>(this);
			}
			
			public static Facebook.Models.Fql.FacebookDeveloper FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookDeveloper, Facebook.Models.Fql.FacebookDeveloper>(value);
            }
			
	 }
	
	
	public partial class FacebookEvent {
	 		
			public Facebook.Schema.Fql.FacebookEvent ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookEvent, Facebook.Schema.Fql.FacebookEvent>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookEvent, Facebook.Schema.Fql.FacebookEvent>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookEvent, Facebook.Schema.Fql.FacebookEvent>(this);
			}
			
			public static Facebook.Models.Fql.FacebookEvent FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookEvent, Facebook.Models.Fql.FacebookEvent>(value);
            }
			
	 }
	
	
	public partial class FacebookEventMember {
	 		
			public Facebook.Schema.Fql.FacebookEventMember ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookEventMember, Facebook.Schema.Fql.FacebookEventMember>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookEventMember, Facebook.Schema.Fql.FacebookEventMember>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookEventMember, Facebook.Schema.Fql.FacebookEventMember>(this);
			}
			
			public static Facebook.Models.Fql.FacebookEventMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookEventMember, Facebook.Models.Fql.FacebookEventMember>(value);
            }
			
	 }
	
	
	public partial class FacebookFamily {
	 		
			public Facebook.Schema.Fql.FacebookFamily ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookFamily, Facebook.Schema.Fql.FacebookFamily>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookFamily, Facebook.Schema.Fql.FacebookFamily>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookFamily, Facebook.Schema.Fql.FacebookFamily>(this);
			}
			
			public static Facebook.Models.Fql.FacebookFamily FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFamily, Facebook.Models.Fql.FacebookFamily>(value);
            }
			
	 }
	
	
	public partial class FacebookFriend {
	 		
			public Facebook.Schema.Fql.FacebookFriend ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookFriend, Facebook.Schema.Fql.FacebookFriend>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookFriend, Facebook.Schema.Fql.FacebookFriend>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookFriend, Facebook.Schema.Fql.FacebookFriend>(this);
			}
			
			public static Facebook.Models.Fql.FacebookFriend FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriend, Facebook.Models.Fql.FacebookFriend>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendlist {
	 		
			public Facebook.Schema.Fql.FacebookFriendlist ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookFriendlist, Facebook.Schema.Fql.FacebookFriendlist>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookFriendlist, Facebook.Schema.Fql.FacebookFriendlist>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookFriendlist, Facebook.Schema.Fql.FacebookFriendlist>(this);
			}
			
			public static Facebook.Models.Fql.FacebookFriendlist FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendlist, Facebook.Models.Fql.FacebookFriendlist>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendlistMember {
	 		
			public Facebook.Schema.Fql.FacebookFriendlistMember ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookFriendlistMember, Facebook.Schema.Fql.FacebookFriendlistMember>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookFriendlistMember, Facebook.Schema.Fql.FacebookFriendlistMember>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookFriendlistMember, Facebook.Schema.Fql.FacebookFriendlistMember>(this);
			}
			
			public static Facebook.Models.Fql.FacebookFriendlistMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendlistMember, Facebook.Models.Fql.FacebookFriendlistMember>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendRequest {
	 		
			public Facebook.Schema.Fql.FacebookFriendRequest ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookFriendRequest, Facebook.Schema.Fql.FacebookFriendRequest>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookFriendRequest, Facebook.Schema.Fql.FacebookFriendRequest>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookFriendRequest, Facebook.Schema.Fql.FacebookFriendRequest>(this);
			}
			
			public static Facebook.Models.Fql.FacebookFriendRequest FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendRequest, Facebook.Models.Fql.FacebookFriendRequest>(value);
            }
			
	 }
	
	
	public partial class FacebookGroup {
	 		
			public Facebook.Schema.Fql.FacebookGroup ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookGroup, Facebook.Schema.Fql.FacebookGroup>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookGroup, Facebook.Schema.Fql.FacebookGroup>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookGroup, Facebook.Schema.Fql.FacebookGroup>(this);
			}
			
			public static Facebook.Models.Fql.FacebookGroup FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookGroup, Facebook.Models.Fql.FacebookGroup>(value);
            }
			
	 }
	
	
	public partial class FacebookGroupMember {
	 		
			public Facebook.Schema.Fql.FacebookGroupMember ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookGroupMember, Facebook.Schema.Fql.FacebookGroupMember>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookGroupMember, Facebook.Schema.Fql.FacebookGroupMember>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookGroupMember, Facebook.Schema.Fql.FacebookGroupMember>(this);
			}
			
			public static Facebook.Models.Fql.FacebookGroupMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookGroupMember, Facebook.Models.Fql.FacebookGroupMember>(value);
            }
			
	 }
	
	
	public partial class FacebookLike {
	 		
			public Facebook.Schema.Fql.FacebookLike ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookLike, Facebook.Schema.Fql.FacebookLike>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookLike, Facebook.Schema.Fql.FacebookLike>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookLike, Facebook.Schema.Fql.FacebookLike>(this);
			}
			
			public static Facebook.Models.Fql.FacebookLike FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLike, Facebook.Models.Fql.FacebookLike>(value);
            }
			
	 }
	
	
	public partial class FacebookLink {
	 		
			public Facebook.Schema.Fql.FacebookLink ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookLink, Facebook.Schema.Fql.FacebookLink>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookLink, Facebook.Schema.Fql.FacebookLink>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookLink, Facebook.Schema.Fql.FacebookLink>(this);
			}
			
			public static Facebook.Models.Fql.FacebookLink FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLink, Facebook.Models.Fql.FacebookLink>(value);
            }
			
	 }
	
	
	public partial class FacebookLinkStat {
	 		
			public Facebook.Schema.Fql.FacebookLinkStat ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookLinkStat, Facebook.Schema.Fql.FacebookLinkStat>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookLinkStat, Facebook.Schema.Fql.FacebookLinkStat>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookLinkStat, Facebook.Schema.Fql.FacebookLinkStat>(this);
			}
			
			public static Facebook.Models.Fql.FacebookLinkStat FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLinkStat, Facebook.Models.Fql.FacebookLinkStat>(value);
            }
			
	 }
	
	
	public partial class FacebookMailboxFolder {
	 		
			public Facebook.Schema.Fql.FacebookMailboxFolder ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookMailboxFolder, Facebook.Schema.Fql.FacebookMailboxFolder>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookMailboxFolder, Facebook.Schema.Fql.FacebookMailboxFolder>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookMailboxFolder, Facebook.Schema.Fql.FacebookMailboxFolder>(this);
			}
			
			public static Facebook.Models.Fql.FacebookMailboxFolder FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMailboxFolder, Facebook.Models.Fql.FacebookMailboxFolder>(value);
            }
			
	 }
	
	
	public partial class FacebookMessage {
	 		
			public Facebook.Schema.Fql.FacebookMessage ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookMessage, Facebook.Schema.Fql.FacebookMessage>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookMessage, Facebook.Schema.Fql.FacebookMessage>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookMessage, Facebook.Schema.Fql.FacebookMessage>(this);
			}
			
			public static Facebook.Models.Fql.FacebookMessage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMessage, Facebook.Models.Fql.FacebookMessage>(value);
            }
			
	 }
	
	
	public partial class FacebookMetric {
	 		
			public Facebook.Schema.Fql.FacebookMetric ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookMetric, Facebook.Schema.Fql.FacebookMetric>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookMetric, Facebook.Schema.Fql.FacebookMetric>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookMetric, Facebook.Schema.Fql.FacebookMetric>(this);
			}
			
			public static Facebook.Models.Fql.FacebookMetric FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMetric, Facebook.Models.Fql.FacebookMetric>(value);
            }
			
	 }
	
	
	public partial class FacebookNote {
	 		
			public Facebook.Schema.Fql.FacebookNote ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookNote, Facebook.Schema.Fql.FacebookNote>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookNote, Facebook.Schema.Fql.FacebookNote>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookNote, Facebook.Schema.Fql.FacebookNote>(this);
			}
			
			public static Facebook.Models.Fql.FacebookNote FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookNote, Facebook.Models.Fql.FacebookNote>(value);
            }
			
	 }
	
	
	public partial class FacebookNotification {
	 		
			public Facebook.Schema.Fql.FacebookNotification ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookNotification, Facebook.Schema.Fql.FacebookNotification>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookNotification, Facebook.Schema.Fql.FacebookNotification>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookNotification, Facebook.Schema.Fql.FacebookNotification>(this);
			}
			
			public static Facebook.Models.Fql.FacebookNotification FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookNotification, Facebook.Models.Fql.FacebookNotification>(value);
            }
			
	 }
	
	
	public partial class FacebookObjectUrl {
	 		
			public Facebook.Schema.Fql.FacebookObjectUrl ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookObjectUrl, Facebook.Schema.Fql.FacebookObjectUrl>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookObjectUrl, Facebook.Schema.Fql.FacebookObjectUrl>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookObjectUrl, Facebook.Schema.Fql.FacebookObjectUrl>(this);
			}
			
			public static Facebook.Models.Fql.FacebookObjectUrl FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookObjectUrl, Facebook.Models.Fql.FacebookObjectUrl>(value);
            }
			
	 }
	
	
	public partial class FacebookPage {
	 		
			public Facebook.Schema.Fql.FacebookPage ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPage, Facebook.Schema.Fql.FacebookPage>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPage, Facebook.Schema.Fql.FacebookPage>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPage, Facebook.Schema.Fql.FacebookPage>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPage, Facebook.Models.Fql.FacebookPage>(value);
            }
			
	 }
	
	
	public partial class FacebookPageAdmin {
	 		
			public Facebook.Schema.Fql.FacebookPageAdmin ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPageAdmin, Facebook.Schema.Fql.FacebookPageAdmin>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPageAdmin, Facebook.Schema.Fql.FacebookPageAdmin>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPageAdmin, Facebook.Schema.Fql.FacebookPageAdmin>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPageAdmin FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPageAdmin, Facebook.Models.Fql.FacebookPageAdmin>(value);
            }
			
	 }
	
	
	public partial class FacebookPageFan {
	 		
			public Facebook.Schema.Fql.FacebookPageFan ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPageFan, Facebook.Schema.Fql.FacebookPageFan>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPageFan, Facebook.Schema.Fql.FacebookPageFan>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPageFan, Facebook.Schema.Fql.FacebookPageFan>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPageFan FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPageFan, Facebook.Models.Fql.FacebookPageFan>(value);
            }
			
	 }
	
	
	public partial class FacebookPermission {
	 		
			public Facebook.Schema.Fql.FacebookPermission ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPermission, Facebook.Schema.Fql.FacebookPermission>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPermission, Facebook.Schema.Fql.FacebookPermission>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPermission, Facebook.Schema.Fql.FacebookPermission>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPermission FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPermission, Facebook.Models.Fql.FacebookPermission>(value);
            }
			
	 }
	
	
	public partial class FacebookPermissionsInfo {
	 		
			public Facebook.Schema.Fql.FacebookPermissionsInfo ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPermissionsInfo, Facebook.Schema.Fql.FacebookPermissionsInfo>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPermissionsInfo, Facebook.Schema.Fql.FacebookPermissionsInfo>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPermissionsInfo, Facebook.Schema.Fql.FacebookPermissionsInfo>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPermissionsInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPermissionsInfo, Facebook.Models.Fql.FacebookPermissionsInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookPhoto {
	 		
			public Facebook.Schema.Fql.FacebookPhoto ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPhoto, Facebook.Schema.Fql.FacebookPhoto>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPhoto, Facebook.Schema.Fql.FacebookPhoto>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPhoto, Facebook.Schema.Fql.FacebookPhoto>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPhoto FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPhoto, Facebook.Models.Fql.FacebookPhoto>(value);
            }
			
	 }
	
	
	public partial class FacebookPhotoTag {
	 		
			public Facebook.Schema.Fql.FacebookPhotoTag ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPhotoTag, Facebook.Schema.Fql.FacebookPhotoTag>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPhotoTag, Facebook.Schema.Fql.FacebookPhotoTag>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPhotoTag, Facebook.Schema.Fql.FacebookPhotoTag>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPhotoTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPhotoTag, Facebook.Models.Fql.FacebookPhotoTag>(value);
            }
			
	 }
	
	
	public partial class FacebookPrivacy {
	 		
			public Facebook.Schema.Fql.FacebookPrivacy ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookPrivacy, Facebook.Schema.Fql.FacebookPrivacy>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookPrivacy, Facebook.Schema.Fql.FacebookPrivacy>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookPrivacy, Facebook.Schema.Fql.FacebookPrivacy>(this);
			}
			
			public static Facebook.Models.Fql.FacebookPrivacy FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPrivacy, Facebook.Models.Fql.FacebookPrivacy>(value);
            }
			
	 }
	
	
	public partial class FacebookProfile {
	 		
			public Facebook.Schema.Fql.FacebookProfile ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookProfile, Facebook.Schema.Fql.FacebookProfile>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookProfile, Facebook.Schema.Fql.FacebookProfile>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookProfile, Facebook.Schema.Fql.FacebookProfile>(this);
			}
			
			public static Facebook.Models.Fql.FacebookProfile FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookProfile, Facebook.Models.Fql.FacebookProfile>(value);
            }
			
	 }
	
	
	public partial class FacebookStandardFriendInfo {
	 		
			public Facebook.Schema.Fql.FacebookStandardFriendInfo ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStandardFriendInfo, Facebook.Schema.Fql.FacebookStandardFriendInfo>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStandardFriendInfo, Facebook.Schema.Fql.FacebookStandardFriendInfo>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStandardFriendInfo, Facebook.Schema.Fql.FacebookStandardFriendInfo>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStandardFriendInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStandardFriendInfo, Facebook.Models.Fql.FacebookStandardFriendInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookStandardUserInfo {
	 		
			public Facebook.Schema.Fql.FacebookStandardUserInfo ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStandardUserInfo, Facebook.Schema.Fql.FacebookStandardUserInfo>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStandardUserInfo, Facebook.Schema.Fql.FacebookStandardUserInfo>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStandardUserInfo, Facebook.Schema.Fql.FacebookStandardUserInfo>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStandardUserInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStandardUserInfo, Facebook.Models.Fql.FacebookStandardUserInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookStatus {
	 		
			public Facebook.Schema.Fql.FacebookStatus ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStatus, Facebook.Schema.Fql.FacebookStatus>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStatus, Facebook.Schema.Fql.FacebookStatus>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStatus, Facebook.Schema.Fql.FacebookStatus>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStatus FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStatus, Facebook.Models.Fql.FacebookStatus>(value);
            }
			
	 }
	
	
	public partial class FacebookStream {
	 		
			public Facebook.Schema.Fql.FacebookStream ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStream, Facebook.Schema.Fql.FacebookStream>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStream, Facebook.Schema.Fql.FacebookStream>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStream, Facebook.Schema.Fql.FacebookStream>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStream FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStream, Facebook.Models.Fql.FacebookStream>(value);
            }
			
	 }
	
	
	public partial class FacebookStreamFilter {
	 		
			public Facebook.Schema.Fql.FacebookStreamFilter ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStreamFilter, Facebook.Schema.Fql.FacebookStreamFilter>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStreamFilter, Facebook.Schema.Fql.FacebookStreamFilter>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStreamFilter, Facebook.Schema.Fql.FacebookStreamFilter>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStreamFilter FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStreamFilter, Facebook.Models.Fql.FacebookStreamFilter>(value);
            }
			
	 }
	
	
	public partial class FacebookStreamTag {
	 		
			public Facebook.Schema.Fql.FacebookStreamTag ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookStreamTag, Facebook.Schema.Fql.FacebookStreamTag>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookStreamTag, Facebook.Schema.Fql.FacebookStreamTag>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookStreamTag, Facebook.Schema.Fql.FacebookStreamTag>(this);
			}
			
			public static Facebook.Models.Fql.FacebookStreamTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStreamTag, Facebook.Models.Fql.FacebookStreamTag>(value);
            }
			
	 }
	
	
	public partial class FacebookThread {
	 		
			public Facebook.Schema.Fql.FacebookThread ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookThread, Facebook.Schema.Fql.FacebookThread>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookThread, Facebook.Schema.Fql.FacebookThread>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookThread, Facebook.Schema.Fql.FacebookThread>(this);
			}
			
			public static Facebook.Models.Fql.FacebookThread FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookThread, Facebook.Models.Fql.FacebookThread>(value);
            }
			
	 }
	
	
	public partial class FacebookTranslation {
	 		
			public Facebook.Schema.Fql.FacebookTranslation ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookTranslation, Facebook.Schema.Fql.FacebookTranslation>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookTranslation, Facebook.Schema.Fql.FacebookTranslation>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookTranslation, Facebook.Schema.Fql.FacebookTranslation>(this);
			}
			
			public static Facebook.Models.Fql.FacebookTranslation FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookTranslation, Facebook.Models.Fql.FacebookTranslation>(value);
            }
			
	 }
	
	
	public partial class FacebookUser {
	 		
			public Facebook.Schema.Fql.FacebookUser ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookUser, Facebook.Schema.Fql.FacebookUser>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookUser, Facebook.Schema.Fql.FacebookUser>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookUser, Facebook.Schema.Fql.FacebookUser>(this);
			}
			
			public static Facebook.Models.Fql.FacebookUser FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookUser, Facebook.Models.Fql.FacebookUser>(value);
            }
			
	 }
	
	
	public partial class FacebookVideo {
	 		
			public Facebook.Schema.Fql.FacebookVideo ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookVideo, Facebook.Schema.Fql.FacebookVideo>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookVideo, Facebook.Schema.Fql.FacebookVideo>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookVideo, Facebook.Schema.Fql.FacebookVideo>(this);
			}
			
			public static Facebook.Models.Fql.FacebookVideo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookVideo, Facebook.Models.Fql.FacebookVideo>(value);
            }
			
	 }
	
	
	public partial class FacebookVideoTag {
	 		
			public Facebook.Schema.Fql.FacebookVideoTag ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Fql.FacebookVideoTag, Facebook.Schema.Fql.FacebookVideoTag>() == null) {
					Mapper.CreateMap<Facebook.Models.Fql.FacebookVideoTag, Facebook.Schema.Fql.FacebookVideoTag>();
				}
				return Mapper.Map<Facebook.Models.Fql.FacebookVideoTag, Facebook.Schema.Fql.FacebookVideoTag>(this);
			}
			
			public static Facebook.Models.Fql.FacebookVideoTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookVideoTag, Facebook.Models.Fql.FacebookVideoTag>(value);
            }
			
	 }
	

}

namespace Facebook.Models.Graph {

	 
	 public partial class FacebookAlbum {
	 		
			public Facebook.Schema.Graph.FacebookAlbum ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookAlbum, Facebook.Schema.Graph.FacebookAlbum>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookAlbum, Facebook.Schema.Graph.FacebookAlbum>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookAlbum, Facebook.Schema.Graph.FacebookAlbum>(this);
			}
			
			public static Facebook.Models.Graph.FacebookAlbum FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookAlbum, Facebook.Models.Graph.FacebookAlbum>(value);
            }
			
	 }

	 
	 public partial class FacebookApplication {
	 		
			public Facebook.Schema.Graph.FacebookApplication ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookApplication, Facebook.Schema.Graph.FacebookApplication>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookApplication, Facebook.Schema.Graph.FacebookApplication>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookApplication, Facebook.Schema.Graph.FacebookApplication>(this);
			}
			
			public static Facebook.Models.Graph.FacebookApplication FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookApplication, Facebook.Models.Graph.FacebookApplication>(value);
            }
			
	 }

	 
	 public partial class FacebookEvent {
	 		
			public Facebook.Schema.Graph.FacebookEvent ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookEvent, Facebook.Schema.Graph.FacebookEvent>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookEvent, Facebook.Schema.Graph.FacebookEvent>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookEvent, Facebook.Schema.Graph.FacebookEvent>(this);
			}
			
			public static Facebook.Models.Graph.FacebookEvent FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookEvent, Facebook.Models.Graph.FacebookEvent>(value);
            }
			
	 }

	 
	 public partial class FacebookGroup {
	 		
			public Facebook.Schema.Graph.FacebookGroup ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookGroup, Facebook.Schema.Graph.FacebookGroup>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookGroup, Facebook.Schema.Graph.FacebookGroup>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookGroup, Facebook.Schema.Graph.FacebookGroup>(this);
			}
			
			public static Facebook.Models.Graph.FacebookGroup FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookGroup, Facebook.Models.Graph.FacebookGroup>(value);
            }
			
	 }

	 
	 public partial class FacebookLink {
	 		
			public Facebook.Schema.Graph.FacebookLink ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookLink, Facebook.Schema.Graph.FacebookLink>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookLink, Facebook.Schema.Graph.FacebookLink>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookLink, Facebook.Schema.Graph.FacebookLink>(this);
			}
			
			public static Facebook.Models.Graph.FacebookLink FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookLink, Facebook.Models.Graph.FacebookLink>(value);
            }
			
	 }

	 
	 public partial class FacebookNote {
	 		
			public Facebook.Schema.Graph.FacebookNote ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookNote, Facebook.Schema.Graph.FacebookNote>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookNote, Facebook.Schema.Graph.FacebookNote>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookNote, Facebook.Schema.Graph.FacebookNote>(this);
			}
			
			public static Facebook.Models.Graph.FacebookNote FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookNote, Facebook.Models.Graph.FacebookNote>(value);
            }
			
	 }

	 
	 public partial class FacebookPage {
	 		
			public Facebook.Schema.Graph.FacebookPage ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookPage, Facebook.Schema.Graph.FacebookPage>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookPage, Facebook.Schema.Graph.FacebookPage>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookPage, Facebook.Schema.Graph.FacebookPage>(this);
			}
			
			public static Facebook.Models.Graph.FacebookPage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPage, Facebook.Models.Graph.FacebookPage>(value);
            }
			
	 }

	 
	 public partial class FacebookPhoto {
	 		
			public Facebook.Schema.Graph.FacebookPhoto ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookPhoto, Facebook.Schema.Graph.FacebookPhoto>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookPhoto, Facebook.Schema.Graph.FacebookPhoto>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookPhoto, Facebook.Schema.Graph.FacebookPhoto>(this);
			}
			
			public static Facebook.Models.Graph.FacebookPhoto FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPhoto, Facebook.Models.Graph.FacebookPhoto>(value);
            }
			
	 }

	 
	 public partial class FacebookPost {
	 		
			public Facebook.Schema.Graph.FacebookPost ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookPost, Facebook.Schema.Graph.FacebookPost>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookPost, Facebook.Schema.Graph.FacebookPost>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookPost, Facebook.Schema.Graph.FacebookPost>(this);
			}
			
			public static Facebook.Models.Graph.FacebookPost FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPost, Facebook.Models.Graph.FacebookPost>(value);
            }
			
	 }

	 
	 public partial class FacebookStatus {
	 		
			public Facebook.Schema.Graph.FacebookStatus ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookStatus, Facebook.Schema.Graph.FacebookStatus>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookStatus, Facebook.Schema.Graph.FacebookStatus>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookStatus, Facebook.Schema.Graph.FacebookStatus>(this);
			}
			
			public static Facebook.Models.Graph.FacebookStatus FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookStatus, Facebook.Models.Graph.FacebookStatus>(value);
            }
			
	 }

	 
	 public partial class FacebookSubscription {
	 		
			public Facebook.Schema.Graph.FacebookSubscription ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookSubscription, Facebook.Schema.Graph.FacebookSubscription>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookSubscription, Facebook.Schema.Graph.FacebookSubscription>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookSubscription, Facebook.Schema.Graph.FacebookSubscription>(this);
			}
			
			public static Facebook.Models.Graph.FacebookSubscription FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookSubscription, Facebook.Models.Graph.FacebookSubscription>(value);
            }
			
	 }

	 
	 public partial class FacebookUser {
	 		
			public Facebook.Schema.Graph.FacebookUser ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookUser, Facebook.Schema.Graph.FacebookUser>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookUser, Facebook.Schema.Graph.FacebookUser>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookUser, Facebook.Schema.Graph.FacebookUser>(this);
			}
			
			public static Facebook.Models.Graph.FacebookUser FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookUser, Facebook.Models.Graph.FacebookUser>(value);
            }
			
	 }

	 
	 public partial class FacebookVideo {
	 		
			public Facebook.Schema.Graph.FacebookVideo ToSchema() {
				if (Mapper.FindTypeMapFor<Facebook.Models.Graph.FacebookVideo, Facebook.Schema.Graph.FacebookVideo>() == null) {
					Mapper.CreateMap<Facebook.Models.Graph.FacebookVideo, Facebook.Schema.Graph.FacebookVideo>();
				}
				return Mapper.Map<Facebook.Models.Graph.FacebookVideo, Facebook.Schema.Graph.FacebookVideo>(this);
			}
			
			public static Facebook.Models.Graph.FacebookVideo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookVideo, Facebook.Models.Graph.FacebookVideo>(value);
            }
			
	 }


}

namespace Facebook.Schema.Fql {

	
	public partial class FacebookAlbum {
	 		
			public Facebook.Models.Fql.FacebookAlbum ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookAlbum, Facebook.Models.Fql.FacebookAlbum>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookAlbum, Facebook.Models.Fql.FacebookAlbum>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookAlbum, Facebook.Models.Fql.FacebookAlbum>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookAlbum FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookAlbum>(value);
            }
			
	 }
	
	
	public partial class FacebookApplication {
	 		
			public Facebook.Models.Fql.FacebookApplication ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookApplication, Facebook.Models.Fql.FacebookApplication>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookApplication, Facebook.Models.Fql.FacebookApplication>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookApplication, Facebook.Models.Fql.FacebookApplication>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookApplication FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookApplication>(value);
            }
			
	 }
	
	
	public partial class FacebookComment {
	 		
			public Facebook.Models.Fql.FacebookComment ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookComment, Facebook.Models.Fql.FacebookComment>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookComment, Facebook.Models.Fql.FacebookComment>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookComment, Facebook.Models.Fql.FacebookComment>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookComment FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookComment>(value);
            }
			
	 }
	
	
	public partial class FacebookConnection {
	 		
			public Facebook.Models.Fql.FacebookConnection ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookConnection, Facebook.Models.Fql.FacebookConnection>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookConnection, Facebook.Models.Fql.FacebookConnection>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookConnection, Facebook.Models.Fql.FacebookConnection>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookConnection FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookConnection>(value);
            }
			
	 }
	
	
	public partial class FacebookCookie {
	 		
			public Facebook.Models.Fql.FacebookCookie ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookCookie, Facebook.Models.Fql.FacebookCookie>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookCookie, Facebook.Models.Fql.FacebookCookie>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookCookie, Facebook.Models.Fql.FacebookCookie>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookCookie FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookCookie>(value);
            }
			
	 }
	
	
	public partial class FacebookDeveloper {
	 		
			public Facebook.Models.Fql.FacebookDeveloper ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookDeveloper, Facebook.Models.Fql.FacebookDeveloper>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookDeveloper, Facebook.Models.Fql.FacebookDeveloper>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookDeveloper, Facebook.Models.Fql.FacebookDeveloper>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookDeveloper FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookDeveloper>(value);
            }
			
	 }
	
	
	public partial class FacebookEvent {
	 		
			public Facebook.Models.Fql.FacebookEvent ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookEvent, Facebook.Models.Fql.FacebookEvent>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookEvent, Facebook.Models.Fql.FacebookEvent>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookEvent, Facebook.Models.Fql.FacebookEvent>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookEvent FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookEvent>(value);
            }
			
	 }
	
	
	public partial class FacebookEventMember {
	 		
			public Facebook.Models.Fql.FacebookEventMember ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookEventMember, Facebook.Models.Fql.FacebookEventMember>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookEventMember, Facebook.Models.Fql.FacebookEventMember>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookEventMember, Facebook.Models.Fql.FacebookEventMember>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookEventMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookEventMember>(value);
            }
			
	 }
	
	
	public partial class FacebookFamily {
	 		
			public Facebook.Models.Fql.FacebookFamily ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookFamily, Facebook.Models.Fql.FacebookFamily>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookFamily, Facebook.Models.Fql.FacebookFamily>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookFamily, Facebook.Models.Fql.FacebookFamily>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookFamily FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFamily>(value);
            }
			
	 }
	
	
	public partial class FacebookFriend {
	 		
			public Facebook.Models.Fql.FacebookFriend ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookFriend, Facebook.Models.Fql.FacebookFriend>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookFriend, Facebook.Models.Fql.FacebookFriend>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookFriend, Facebook.Models.Fql.FacebookFriend>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookFriend FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriend>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendlist {
	 		
			public Facebook.Models.Fql.FacebookFriendlist ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookFriendlist, Facebook.Models.Fql.FacebookFriendlist>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookFriendlist, Facebook.Models.Fql.FacebookFriendlist>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookFriendlist, Facebook.Models.Fql.FacebookFriendlist>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookFriendlist FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendlist>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendlistMember {
	 		
			public Facebook.Models.Fql.FacebookFriendlistMember ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookFriendlistMember, Facebook.Models.Fql.FacebookFriendlistMember>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookFriendlistMember, Facebook.Models.Fql.FacebookFriendlistMember>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookFriendlistMember, Facebook.Models.Fql.FacebookFriendlistMember>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookFriendlistMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendlistMember>(value);
            }
			
	 }
	
	
	public partial class FacebookFriendRequest {
	 		
			public Facebook.Models.Fql.FacebookFriendRequest ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookFriendRequest, Facebook.Models.Fql.FacebookFriendRequest>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookFriendRequest, Facebook.Models.Fql.FacebookFriendRequest>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookFriendRequest, Facebook.Models.Fql.FacebookFriendRequest>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookFriendRequest FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookFriendRequest>(value);
            }
			
	 }
	
	
	public partial class FacebookGroup {
	 		
			public Facebook.Models.Fql.FacebookGroup ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookGroup, Facebook.Models.Fql.FacebookGroup>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookGroup, Facebook.Models.Fql.FacebookGroup>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookGroup, Facebook.Models.Fql.FacebookGroup>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookGroup FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookGroup>(value);
            }
			
	 }
	
	
	public partial class FacebookGroupMember {
	 		
			public Facebook.Models.Fql.FacebookGroupMember ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookGroupMember, Facebook.Models.Fql.FacebookGroupMember>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookGroupMember, Facebook.Models.Fql.FacebookGroupMember>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookGroupMember, Facebook.Models.Fql.FacebookGroupMember>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookGroupMember FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookGroupMember>(value);
            }
			
	 }
	
	
	public partial class FacebookLike {
	 		
			public Facebook.Models.Fql.FacebookLike ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookLike, Facebook.Models.Fql.FacebookLike>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookLike, Facebook.Models.Fql.FacebookLike>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookLike, Facebook.Models.Fql.FacebookLike>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookLike FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLike>(value);
            }
			
	 }
	
	
	public partial class FacebookLink {
	 		
			public Facebook.Models.Fql.FacebookLink ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookLink, Facebook.Models.Fql.FacebookLink>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookLink, Facebook.Models.Fql.FacebookLink>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookLink, Facebook.Models.Fql.FacebookLink>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookLink FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLink>(value);
            }
			
	 }
	
	
	public partial class FacebookLinkStat {
	 		
			public Facebook.Models.Fql.FacebookLinkStat ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookLinkStat, Facebook.Models.Fql.FacebookLinkStat>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookLinkStat, Facebook.Models.Fql.FacebookLinkStat>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookLinkStat, Facebook.Models.Fql.FacebookLinkStat>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookLinkStat FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookLinkStat>(value);
            }
			
	 }
	
	
	public partial class FacebookMailboxFolder {
	 		
			public Facebook.Models.Fql.FacebookMailboxFolder ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookMailboxFolder, Facebook.Models.Fql.FacebookMailboxFolder>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookMailboxFolder, Facebook.Models.Fql.FacebookMailboxFolder>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookMailboxFolder, Facebook.Models.Fql.FacebookMailboxFolder>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookMailboxFolder FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMailboxFolder>(value);
            }
			
	 }
	
	
	public partial class FacebookMessage {
	 		
			public Facebook.Models.Fql.FacebookMessage ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookMessage, Facebook.Models.Fql.FacebookMessage>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookMessage, Facebook.Models.Fql.FacebookMessage>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookMessage, Facebook.Models.Fql.FacebookMessage>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookMessage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMessage>(value);
            }
			
	 }
	
	
	public partial class FacebookMetric {
	 		
			public Facebook.Models.Fql.FacebookMetric ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookMetric, Facebook.Models.Fql.FacebookMetric>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookMetric, Facebook.Models.Fql.FacebookMetric>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookMetric, Facebook.Models.Fql.FacebookMetric>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookMetric FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookMetric>(value);
            }
			
	 }
	
	
	public partial class FacebookNote {
	 		
			public Facebook.Models.Fql.FacebookNote ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookNote, Facebook.Models.Fql.FacebookNote>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookNote, Facebook.Models.Fql.FacebookNote>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookNote, Facebook.Models.Fql.FacebookNote>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookNote FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookNote>(value);
            }
			
	 }
	
	
	public partial class FacebookNotification {
	 		
			public Facebook.Models.Fql.FacebookNotification ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookNotification, Facebook.Models.Fql.FacebookNotification>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookNotification, Facebook.Models.Fql.FacebookNotification>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookNotification, Facebook.Models.Fql.FacebookNotification>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookNotification FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookNotification>(value);
            }
			
	 }
	
	
	public partial class FacebookObjectUrl {
	 		
			public Facebook.Models.Fql.FacebookObjectUrl ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookObjectUrl, Facebook.Models.Fql.FacebookObjectUrl>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookObjectUrl, Facebook.Models.Fql.FacebookObjectUrl>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookObjectUrl, Facebook.Models.Fql.FacebookObjectUrl>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookObjectUrl FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookObjectUrl>(value);
            }
			
	 }
	
	
	public partial class FacebookPage {
	 		
			public Facebook.Models.Fql.FacebookPage ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPage, Facebook.Models.Fql.FacebookPage>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPage, Facebook.Models.Fql.FacebookPage>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPage, Facebook.Models.Fql.FacebookPage>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPage>(value);
            }
			
	 }
	
	
	public partial class FacebookPageAdmin {
	 		
			public Facebook.Models.Fql.FacebookPageAdmin ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPageAdmin, Facebook.Models.Fql.FacebookPageAdmin>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPageAdmin, Facebook.Models.Fql.FacebookPageAdmin>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPageAdmin, Facebook.Models.Fql.FacebookPageAdmin>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPageAdmin FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPageAdmin>(value);
            }
			
	 }
	
	
	public partial class FacebookPageFan {
	 		
			public Facebook.Models.Fql.FacebookPageFan ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPageFan, Facebook.Models.Fql.FacebookPageFan>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPageFan, Facebook.Models.Fql.FacebookPageFan>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPageFan, Facebook.Models.Fql.FacebookPageFan>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPageFan FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPageFan>(value);
            }
			
	 }
	
	
	public partial class FacebookPermission {
	 		
			public Facebook.Models.Fql.FacebookPermission ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPermission, Facebook.Models.Fql.FacebookPermission>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPermission, Facebook.Models.Fql.FacebookPermission>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPermission, Facebook.Models.Fql.FacebookPermission>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPermission FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPermission>(value);
            }
			
	 }
	
	
	public partial class FacebookPermissionsInfo {
	 		
			public Facebook.Models.Fql.FacebookPermissionsInfo ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPermissionsInfo, Facebook.Models.Fql.FacebookPermissionsInfo>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPermissionsInfo, Facebook.Models.Fql.FacebookPermissionsInfo>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPermissionsInfo, Facebook.Models.Fql.FacebookPermissionsInfo>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPermissionsInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPermissionsInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookPhoto {
	 		
			public Facebook.Models.Fql.FacebookPhoto ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPhoto, Facebook.Models.Fql.FacebookPhoto>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPhoto, Facebook.Models.Fql.FacebookPhoto>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPhoto, Facebook.Models.Fql.FacebookPhoto>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPhoto FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPhoto>(value);
            }
			
	 }
	
	
	public partial class FacebookPhotoTag {
	 		
			public Facebook.Models.Fql.FacebookPhotoTag ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPhotoTag, Facebook.Models.Fql.FacebookPhotoTag>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPhotoTag, Facebook.Models.Fql.FacebookPhotoTag>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPhotoTag, Facebook.Models.Fql.FacebookPhotoTag>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPhotoTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPhotoTag>(value);
            }
			
	 }
	
	
	public partial class FacebookPrivacy {
	 		
			public Facebook.Models.Fql.FacebookPrivacy ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookPrivacy, Facebook.Models.Fql.FacebookPrivacy>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookPrivacy, Facebook.Models.Fql.FacebookPrivacy>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookPrivacy, Facebook.Models.Fql.FacebookPrivacy>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookPrivacy FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookPrivacy>(value);
            }
			
	 }
	
	
	public partial class FacebookProfile {
	 		
			public Facebook.Models.Fql.FacebookProfile ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookProfile, Facebook.Models.Fql.FacebookProfile>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookProfile, Facebook.Models.Fql.FacebookProfile>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookProfile, Facebook.Models.Fql.FacebookProfile>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookProfile FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookProfile>(value);
            }
			
	 }
	
	
	public partial class FacebookStandardFriendInfo {
	 		
			public Facebook.Models.Fql.FacebookStandardFriendInfo ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStandardFriendInfo, Facebook.Models.Fql.FacebookStandardFriendInfo>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStandardFriendInfo, Facebook.Models.Fql.FacebookStandardFriendInfo>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStandardFriendInfo, Facebook.Models.Fql.FacebookStandardFriendInfo>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStandardFriendInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStandardFriendInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookStandardUserInfo {
	 		
			public Facebook.Models.Fql.FacebookStandardUserInfo ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStandardUserInfo, Facebook.Models.Fql.FacebookStandardUserInfo>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStandardUserInfo, Facebook.Models.Fql.FacebookStandardUserInfo>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStandardUserInfo, Facebook.Models.Fql.FacebookStandardUserInfo>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStandardUserInfo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStandardUserInfo>(value);
            }
			
	 }
	
	
	public partial class FacebookStatus {
	 		
			public Facebook.Models.Fql.FacebookStatus ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStatus, Facebook.Models.Fql.FacebookStatus>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStatus, Facebook.Models.Fql.FacebookStatus>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStatus, Facebook.Models.Fql.FacebookStatus>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStatus FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStatus>(value);
            }
			
	 }
	
	
	public partial class FacebookStream {
	 		
			public Facebook.Models.Fql.FacebookStream ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStream, Facebook.Models.Fql.FacebookStream>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStream, Facebook.Models.Fql.FacebookStream>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStream, Facebook.Models.Fql.FacebookStream>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStream FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStream>(value);
            }
			
	 }
	
	
	public partial class FacebookStreamFilter {
	 		
			public Facebook.Models.Fql.FacebookStreamFilter ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStreamFilter, Facebook.Models.Fql.FacebookStreamFilter>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStreamFilter, Facebook.Models.Fql.FacebookStreamFilter>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStreamFilter, Facebook.Models.Fql.FacebookStreamFilter>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStreamFilter FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStreamFilter>(value);
            }
			
	 }
	
	
	public partial class FacebookStreamTag {
	 		
			public Facebook.Models.Fql.FacebookStreamTag ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookStreamTag, Facebook.Models.Fql.FacebookStreamTag>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookStreamTag, Facebook.Models.Fql.FacebookStreamTag>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookStreamTag, Facebook.Models.Fql.FacebookStreamTag>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookStreamTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookStreamTag>(value);
            }
			
	 }
	
	
	public partial class FacebookThread {
	 		
			public Facebook.Models.Fql.FacebookThread ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookThread, Facebook.Models.Fql.FacebookThread>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookThread, Facebook.Models.Fql.FacebookThread>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookThread, Facebook.Models.Fql.FacebookThread>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookThread FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookThread>(value);
            }
			
	 }
	
	
	public partial class FacebookTranslation {
	 		
			public Facebook.Models.Fql.FacebookTranslation ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookTranslation, Facebook.Models.Fql.FacebookTranslation>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookTranslation, Facebook.Models.Fql.FacebookTranslation>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookTranslation, Facebook.Models.Fql.FacebookTranslation>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookTranslation FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookTranslation>(value);
            }
			
	 }
	
	
	public partial class FacebookUser {
	 		
			public Facebook.Models.Fql.FacebookUser ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookUser, Facebook.Models.Fql.FacebookUser>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookUser, Facebook.Models.Fql.FacebookUser>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookUser, Facebook.Models.Fql.FacebookUser>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookUser FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookUser>(value);
            }
			
	 }
	
	
	public partial class FacebookVideo {
	 		
			public Facebook.Models.Fql.FacebookVideo ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookVideo, Facebook.Models.Fql.FacebookVideo>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookVideo, Facebook.Models.Fql.FacebookVideo>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookVideo, Facebook.Models.Fql.FacebookVideo>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookVideo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookVideo>(value);
            }
			
	 }
	
	
	public partial class FacebookVideoTag {
	 		
			public Facebook.Models.Fql.FacebookVideoTag ToModel() {
				if (Mapper.FindTypeMapFor<Facebook.Schema.Fql.FacebookVideoTag, Facebook.Models.Fql.FacebookVideoTag>() == null) {
					Mapper.CreateMap<Facebook.Schema.Fql.FacebookVideoTag, Facebook.Models.Fql.FacebookVideoTag>();
				}
				return Mapper.Map<Facebook.Schema.Fql.FacebookVideoTag, Facebook.Models.Fql.FacebookVideoTag>(this);
			}
			
			public static Facebook.Schema.Fql.FacebookVideoTag FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Fql.FacebookVideoTag>(value);
            }
			
	 }
	

}

namespace Facebook.Schema.Graph {

	 
	 public partial class FacebookAlbum {
	 		
			public Facebook.Models.Graph.FacebookAlbum ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookAlbum, Facebook.Models.Graph.FacebookAlbum>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookAlbum, Facebook.Models.Graph.FacebookAlbum>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookAlbum, Facebook.Models.Graph.FacebookAlbum>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookAlbum FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookAlbum>(value);
            }
			
	 }

	 
	 public partial class FacebookApplication {
	 		
			public Facebook.Models.Graph.FacebookApplication ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookApplication, Facebook.Models.Graph.FacebookApplication>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookApplication, Facebook.Models.Graph.FacebookApplication>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookApplication, Facebook.Models.Graph.FacebookApplication>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookApplication FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookApplication>(value);
            }
			
	 }

	 
	 public partial class FacebookEvent {
	 		
			public Facebook.Models.Graph.FacebookEvent ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookEvent, Facebook.Models.Graph.FacebookEvent>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookEvent, Facebook.Models.Graph.FacebookEvent>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookEvent, Facebook.Models.Graph.FacebookEvent>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookEvent FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookEvent>(value);
            }
			
	 }

	 
	 public partial class FacebookGroup {
	 		
			public Facebook.Models.Graph.FacebookGroup ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookGroup, Facebook.Models.Graph.FacebookGroup>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookGroup, Facebook.Models.Graph.FacebookGroup>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookGroup, Facebook.Models.Graph.FacebookGroup>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookGroup FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookGroup>(value);
            }
			
	 }

	 
	 public partial class FacebookLink {
	 		
			public Facebook.Models.Graph.FacebookLink ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookLink, Facebook.Models.Graph.FacebookLink>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookLink, Facebook.Models.Graph.FacebookLink>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookLink, Facebook.Models.Graph.FacebookLink>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookLink FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookLink>(value);
            }
			
	 }

	 
	 public partial class FacebookNote {
	 		
			public Facebook.Models.Graph.FacebookNote ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookNote, Facebook.Models.Graph.FacebookNote>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookNote, Facebook.Models.Graph.FacebookNote>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookNote, Facebook.Models.Graph.FacebookNote>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookNote FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookNote>(value);
            }
			
	 }

	 
	 public partial class FacebookPage {
	 		
			public Facebook.Models.Graph.FacebookPage ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookPage, Facebook.Models.Graph.FacebookPage>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookPage, Facebook.Models.Graph.FacebookPage>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookPage, Facebook.Models.Graph.FacebookPage>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookPage FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPage>(value);
            }
			
	 }

	 
	 public partial class FacebookPhoto {
	 		
			public Facebook.Models.Graph.FacebookPhoto ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookPhoto, Facebook.Models.Graph.FacebookPhoto>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookPhoto, Facebook.Models.Graph.FacebookPhoto>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookPhoto, Facebook.Models.Graph.FacebookPhoto>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookPhoto FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPhoto>(value);
            }
			
	 }

	 
	 public partial class FacebookPost {
	 		
			public Facebook.Models.Graph.FacebookPost ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookPost, Facebook.Models.Graph.FacebookPost>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookPost, Facebook.Models.Graph.FacebookPost>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookPost, Facebook.Models.Graph.FacebookPost>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookPost FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookPost>(value);
            }
			
	 }

	 
	 public partial class FacebookStatus {
	 		
			public Facebook.Models.Graph.FacebookStatus ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookStatus, Facebook.Models.Graph.FacebookStatus>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookStatus, Facebook.Models.Graph.FacebookStatus>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookStatus, Facebook.Models.Graph.FacebookStatus>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookStatus FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookStatus>(value);
            }
			
	 }

	 
	 public partial class FacebookSubscription {
	 		
			public Facebook.Models.Graph.FacebookSubscription ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookSubscription, Facebook.Models.Graph.FacebookSubscription>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookSubscription, Facebook.Models.Graph.FacebookSubscription>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookSubscription, Facebook.Models.Graph.FacebookSubscription>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookSubscription FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookSubscription>(value);
            }
			
	 }

	 
	 public partial class FacebookUser {
	 		
			public Facebook.Models.Graph.FacebookUser ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookUser, Facebook.Models.Graph.FacebookUser>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookUser, Facebook.Models.Graph.FacebookUser>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookUser, Facebook.Models.Graph.FacebookUser>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookUser FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookUser>(value);
            }
			
	 }

	 
	 public partial class FacebookVideo {
	 		
			public Facebook.Models.Graph.FacebookVideo ToModel() {
	            if (Mapper.FindTypeMapFor<Facebook.Schema.Graph.FacebookVideo, Facebook.Models.Graph.FacebookVideo>() == null) {
					Mapper.CreateMap<Facebook.Schema.Graph.FacebookVideo, Facebook.Models.Graph.FacebookVideo>();
				}
				return Mapper.Map<Facebook.Schema.Graph.FacebookVideo, Facebook.Models.Graph.FacebookVideo>(this);
			}
			
			public static Facebook.Schema.Graph.FacebookVideo FromDynamic(dynamic value) {
                return FacebookMapper.Map<Facebook.Schema.Graph.FacebookVideo>(value);
            }
			
	 }


}