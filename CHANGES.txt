FACEBOOK C# SDK CHANGE LIST
---------------------------

SDK consumers : developers using this SDK.
SDK developers: developers writing this SDK.

=========================================================================
vNext
=========================================================================
1. all properties in FacebookSession changed to private.
2. removed FacebookClientBase (features moved to FacebookClient)
3. added extension methods for HttpRequest and HttpRequestBase to include
   helper methods to get facebook signed request and facebook session.

    a. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequestBase httpRequest, string secret);
    b. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequestBase httpRequest, IFacebookApplication facebookApplication);
    c. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequestBase httpRequest);
    d. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequest httpRequest, string secret);
    e. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequest httpRequest, IFacebookApplication facebookApplication);
    f. public static FacebookSignedRequest GetFacebookSignedRequest(this HttpRequest httpRequest);
    g. public static FacebookSession GetFacebookSession(this HttpRequestBase httpRequest, string appId, string appSecret);
    h. public static FacebookSession GetFacebookSession(this HttpRequestBase httpRequest, IFacebookApplication facebookApplication);
    i. public static FacebookSession GetFacebookSession(this HttpRequestBase httpRequest);
    j. public static FacebookSession GetFacebookSession(this HttpRequest httpRequest, string appId, string appSecret);
    k. public static FacebookSession GetFacebookSession(this HttpRequest httpRequest, IFacebookApplication facebookApplication);
    l. public static FacebookSession GetFacebookSession(this HttpRequest httpRequest);

=========================================================================
v5.0.3 (BETA)
=========================================================================
1. added in FacebookWebUtils

	(internal/private methods visible to SDK developers)
		a. internal static bool VerifyPostSubscription(HttpRequestBase request, string secret, string jsonString, out string errorMessage);
		b. internal static bool VerifyGetSubscription(HttpRequestBase request, string verifyToken, out string errorMessage);

2. moved FacebookSession and FacebookSignedRequest to Facebook.Web

=========================================================================
v5.0.2 (BETA)
=========================================================================
1. added method to convert object to IDictionary<string,object> in FacebookUtils
	a. internal static IDictionary<string, object> ToDictionary(object parameters);

2. added overload methods in FacebookClientBase to set object as parameter for Post
	a. public object Post(object parameters);
	b. public object Post(string path, object parameters);
	c. public void PostAsync(object parameters, FacebookAsyncCallback callback, object state);
	d. public void PostAsync(object parameters, FacebookAsyncCallback callback);
	e. public void PostAsync(string path, object parameters, FacebookAsyncCallback callback, object state);
	f. public void PostAsync(string path, object parameters, FacebookAsyncCallback callback);

3. added support for Facebook subscriptions - Facebook.Web.FacebookSubscriptionsHttpHandler

4. exposed the original property of Facebook Signed Request as Data.
   This allows the sdk consumers to access any value of the SignedRequest by accessing 
   the Data property.

   A new sample called CSASPNETWebsiteRegistrationForm contains an example on how to use it.

   This enables the sdk consumers to write application that use Registration form or any new
   value that will be added by Facebook in the signed request.
	
5. removed FacebookSignedRequestUser

6. updated xunit to v1.7

=========================================================================
v5.0.1 (BETA)
=========================================================================
1. Renamed FacebookApp to FacebookClient

2. Renamed FacebookAppBase to FacebookClientBase

3. added helper methods to get the application access token in FacebookOAuthClient
	a. public object GetApplicationAccessToken();
	b. public void GetApplicationAccessTokenAsync(FacebookAsyncCallback callback, object state);
	c. public void GetApplicationAccessTokenAsync(FacebookAsyncCallback callback);

4. removed obsolete Fql extension methods.

5. moved Query extension methods to FacebookClient.

6. async versions of Query methods.
    a. public void QueryAsync(string fql, FacebookAsyncCallback callback, object state);
	b. public void QueryAsync(string fql, FacebookAsyncCallback callback);
	c. public void QueryAsync(string[] fql, FacebookAsyncCallback callback, object state);
	d. public void QueryAsync(string[] fql, FacebookAsyncCallback callback);

=========================================================================
v5.0.0 (BETA)
=========================================================================
1. added new 'FacebookUtils' class which contains all the helper methods.

	(public methods visible to SDK consumers)

	  Date and Time helper methods:
		a. public static DateTime Epoch { get; }
		b. public static DateTime FromUnixTime(double unixTime);
		c. public static DateTime FromUnixTime(string unixTime);
		d. public static double ToUnixTime(DateTime dateTime);
		e. public static double ToUnixTime(DateTimeOffset dateTime);
		f. public static string ToIso8601FormattedDateTime(DateTime dateTime);
		g. public static DateTime FromIso8601FormattedDateTime(string iso8601DateTime);

	(internal/private methods visible to SDK developers)
		
	  Dictionary helper methods:
		a. internal static IDictionary<string, object> Merge(IDictionary<string, object> first, IDictionary<string, object> second);
		b. internal static string ToJsonQueryString(IDictionary<string, object> dictionary);
		c. internal static string ToJsonQueryString(IDictionary<string, string> dictionary);
		d. internal static string ToJsonQueryString(System.Collections.Specialized.NameValueCollection collection); 
		   (for non-sliverlight builds only)
	  
	  String helper methods:
		a. internal static string ConvertToString(HttpMethod httpMethod);

	  Html Encoding/Decoding helper methods:
		a. internal static string HtmlDecode(string input);
		b. internal static string HtmlEncode(string input);

	  Url Encoding/Decoding and misc helper methods:
		a. internal static string UrlDecode(string input);
		b. internal static string UrlEncode(string input);
		c. internal static string RemoveTrailingSlash(string url);
		d. internal static Uri RemoveTrailingSlash(Uri url);

	  Base64 Url Encoding/Decoding helper methods:
		a. internal static byte[] Base64UrlDecode(string base64UrlSafeString);
		b. internal static string Base64UrlEncode(byte[] input);

	  QueryString helper methods:
		a. internal static IDictionary<string, object> ParseUrlQueryString(string query)

	  Encryption/Decryption helper methods:
		a. internal static byte[] ComputeHmacSha256Hash(byte[] data, byte[] key);
		   (for non-sliverlight builds only)
		b. internal static string DecryptAes256CBCNoPadding(byte[] encryptedData, byte[] key, byte[] iv);
		   (for non-sliverlight builds only)
		c. internal static byte[] ComputerMd5Hash(byte[] data);
		   (for non-sliverlight builds only)

2. FacebookSignedRequest.Parse
	(for non-sliverlight builds only)
	This method is now capable of parsing both old and new encrypted signed requests.
	http://developers.facebook.com/docs/authentication/canvas
	http://developers.facebook.com/docs/authentication/canvas/encryption_proposal

	There are overload for the Parse method.
	For the old one this overload would most likely be used.
		public static FacebookSignedRequest Parse(string secret, string signedRequestValue);

	For the new one this overload has to be used.
		public static FacebookSignedRequest Parse(string secret, string signedRequestValue, int maxAge);

	There is also a third overload which is marked as internal and used for unit testing only.
		internal static FacebookSignedRequest Parse(string secret, string signedRequestValue, int maxAge, double currentTime);

3. Facebook.dll InternalsVisibleTo Facebook.Web and Facebook.Web.Mvc

4. FacebookWebUtils added to Facebook.Web.dll

	(internal/private methods visible to SDK developers)

		a. internal static FacebookSignedRequest GetSignedRequest(string appSecret, HttpRequestBase httpRequest);
		b. internal static string GetSessionCookieName(string appId);
		c. internal static FacebookSession GetSession(string appId, string appSecret, HttpRequestBase httpRequest);

	  Extended Permission helper methods
		a. internal static string[] HasPermissions(string appId, string appSecret, long userId, string[] permissions);
		b. internal static bool HasPermission(string appId, string appSecret, long userId, string permission);

5. FacebookSession
	
   (internal/private methods visible to SDK developers)

		a. internal static string GenerateSessionSignature(string secret, IDictionary<string, object> dictionary);
		   (for non-sliverlight builds only)
		b. internal static FacebookSession ParseCookieValue(string appSecret, string cookieValue);
		   (for non-sliverlight builds only)

6. removed ICanvasSettings and IFacebookSettings.
   added IFacebookApplication

   ICanvasSettings and IFacebookSettings have been merged to IFacebookApplication.
   IFacebookApplication contains the most of the settings of the Facebook Application
   such as AppId, AppSecret, CanvasPage and CanvasUrl.

7. removed CanvasConfigurationSettings
   FacebookConfigurationSection derives from IFacebookApplication hence contains configurations
   from both ICanvasSettings and IFacebookSettings which was in v4.

8. Migrated Facebook.dll to client only profile.

9. IOAuthClientAuthorizer and FacebookOAuthClientAuthorizer
	a. added Uri GetLoginUrl(IDictionary<string, object> parameters);
	b. added Uri GetLogoutUrl(IDictionary<string, object> parameters);

	Note: by default the redirect uri is http://www.facebook.com/connect/login_success.html
		  for windows phone 7 builds (only) the display mode is "touch" by default.

	All library uses the new Facebook OAuth dialog (http://developers.facebook.com/docs/reference/dialogs/oauth)
	for authorization.

10. FacebookAuthenticationResult can now parse urls that does not start with 
    http://www.facebook.com/connect/login_success.html

11. added FacebookContext
	This is used to get the current facebook application settings.
	It can be set using the web.config or app.config files as well as programmatically by calling
	FacebookContext.SetApplication method.
	
12. Renamed FacebookOAuthClientAuthorizer to FacebookOAuthClient, Renamed FacebookAuthenticationResult to 
	FacebookOAuthResult. Removed IFacebookOAuthClientAuthorizer interface.
	
13. Renamed FacebookApp to FacebookClient

14. Renamed FacebookAppBase to FacebookClientBase